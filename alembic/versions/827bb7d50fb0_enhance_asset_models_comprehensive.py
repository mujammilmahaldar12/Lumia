"""enhance_asset_models_comprehensive

Revision ID: 827bb7d50fb0
Revises: ac47fd12b7b9
Create Date: 2025-09-27 01:49:10.258088

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '827bb7d50fb0'
down_revision: Union[str, Sequence[str], None] = 'ac47fd12b7b9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('cryptos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('circulating_supply', sa.BigInteger(), nullable=True),
    sa.Column('total_supply', sa.BigInteger(), nullable=True),
    sa.Column('max_supply', sa.BigInteger(), nullable=True),
    sa.Column('algorithm', sa.String(length=100), nullable=True),
    sa.Column('consensus_mechanism', sa.String(length=50), nullable=True),
    sa.Column('blockchain', sa.String(length=100), nullable=True),
    sa.Column('token_type', sa.String(length=50), nullable=True),
    sa.Column('contract_address', sa.String(length=100), nullable=True),
    sa.Column('decimals', sa.Integer(), nullable=True),
    sa.Column('all_time_high', sa.Float(), nullable=True),
    sa.Column('all_time_high_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('all_time_low', sa.Float(), nullable=True),
    sa.Column('all_time_low_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('block_time', sa.Float(), nullable=True),
    sa.Column('hashing_algorithm', sa.String(length=100), nullable=True),
    sa.Column('launch_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('whitepaper_url', sa.String(length=500), nullable=True),
    sa.Column('source_code_url', sa.String(length=500), nullable=True),
    sa.Column('reddit_subscribers', sa.Integer(), nullable=True),
    sa.Column('twitter_followers', sa.Integer(), nullable=True),
    sa.Column('telegram_members', sa.Integer(), nullable=True),
    sa.Column('is_minable', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_updated', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asset_id')
    )
    op.create_index(op.f('ix_cryptos_id'), 'cryptos', ['id'], unique=False)
    op.create_table('etfs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('nav', sa.Float(), nullable=True),
    sa.Column('expense_ratio', sa.Float(), nullable=True),
    sa.Column('underlying_index', sa.String(length=255), nullable=True),
    sa.Column('index_provider', sa.String(length=100), nullable=True),
    sa.Column('top_10_holdings_weight', sa.Float(), nullable=True),
    sa.Column('number_of_holdings', sa.Integer(), nullable=True),
    sa.Column('tracking_error', sa.Float(), nullable=True),
    sa.Column('avg_daily_volume', sa.Integer(), nullable=True),
    sa.Column('inception_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('fund_manager', sa.String(length=255), nullable=True),
    sa.Column('benchmark', sa.String(length=255), nullable=True),
    sa.Column('investment_objective', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_updated', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asset_id')
    )
    op.create_index(op.f('ix_etfs_id'), 'etfs', ['id'], unique=False)
    op.create_table('mutual_funds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('nav', sa.Float(), nullable=True),
    sa.Column('expense_ratio', sa.Float(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('subcategory', sa.String(length=100), nullable=True),
    sa.Column('fund_manager', sa.String(length=255), nullable=True),
    sa.Column('amc_name', sa.String(length=255), nullable=True),
    sa.Column('minimum_investment', sa.BigInteger(), nullable=True),
    sa.Column('minimum_sip', sa.Integer(), nullable=True),
    sa.Column('exit_load', sa.Float(), nullable=True),
    sa.Column('aum', sa.BigInteger(), nullable=True),
    sa.Column('alpha', sa.Float(), nullable=True),
    sa.Column('beta', sa.Float(), nullable=True),
    sa.Column('sharpe_ratio', sa.Float(), nullable=True),
    sa.Column('standard_deviation', sa.Float(), nullable=True),
    sa.Column('return_1yr', sa.Float(), nullable=True),
    sa.Column('return_3yr', sa.Float(), nullable=True),
    sa.Column('return_5yr', sa.Float(), nullable=True),
    sa.Column('return_since_inception', sa.Float(), nullable=True),
    sa.Column('inception_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('benchmark', sa.String(length=255), nullable=True),
    sa.Column('investment_objective', sa.Text(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_updated', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asset_id')
    )
    op.create_index(op.f('ix_mutual_funds_id'), 'mutual_funds', ['id'], unique=False)
    op.add_column('assets', sa.Column('subtype', sa.String(length=100), nullable=True))
    op.add_column('assets', sa.Column('country', sa.String(length=50), nullable=True))
    op.add_column('assets', sa.Column('total_assets', sa.BigInteger(), nullable=True))
    op.add_column('assets', sa.Column('expense_ratio', sa.Float(), nullable=True))
    op.add_column('assets', sa.Column('dividend_yield', sa.Float(), nullable=True))
    op.add_column('assets', sa.Column('is_active', sa.Boolean(), nullable=True))
    op.add_column('assets', sa.Column('listing_date', sa.TIMESTAMP(), nullable=True))
    op.add_column('assets', sa.Column('delisting_date', sa.TIMESTAMP(), nullable=True))
    op.add_column('assets', sa.Column('website', sa.String(length=500), nullable=True))
    op.add_column('assets', sa.Column('isin', sa.String(length=20), nullable=True))
    op.add_column('assets', sa.Column('cusip', sa.String(length=20), nullable=True))
    op.add_column('assets', sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True))
    op.alter_column('assets', 'symbol',
               existing_type=sa.VARCHAR(length=30),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('assets', 'name',
               existing_type=sa.VARCHAR(length=255),
               type_=sa.String(length=500),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('assets', 'name',
               existing_type=sa.String(length=500),
               type_=sa.VARCHAR(length=255),
               existing_nullable=False)
    op.alter_column('assets', 'symbol',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=30),
               existing_nullable=False)
    op.drop_column('assets', 'created_at')
    op.drop_column('assets', 'cusip')
    op.drop_column('assets', 'isin')
    op.drop_column('assets', 'website')
    op.drop_column('assets', 'delisting_date')
    op.drop_column('assets', 'listing_date')
    op.drop_column('assets', 'is_active')
    op.drop_column('assets', 'dividend_yield')
    op.drop_column('assets', 'expense_ratio')
    op.drop_column('assets', 'total_assets')
    op.drop_column('assets', 'country')
    op.drop_column('assets', 'subtype')
    op.drop_index(op.f('ix_mutual_funds_id'), table_name='mutual_funds')
    op.drop_table('mutual_funds')
    op.drop_index(op.f('ix_etfs_id'), table_name='etfs')
    op.drop_table('etfs')
    op.drop_index(op.f('ix_cryptos_id'), table_name='cryptos')
    op.drop_table('cryptos')
    # ### end Alembic commands ###
