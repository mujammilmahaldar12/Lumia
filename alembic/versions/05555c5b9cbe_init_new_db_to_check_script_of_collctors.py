"""init new db to check script of collctors

Revision ID: 05555c5b9cbe
Revises: 
Create Date: 2025-10-07 21:42:45.092138

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '05555c5b9cbe'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('subtype', sa.String(length=100), nullable=True),
    sa.Column('exchange', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=50), nullable=True),
    sa.Column('currency', sa.String(length=10), nullable=True),
    sa.Column('sector', sa.String(length=100), nullable=True),
    sa.Column('industry', sa.String(length=100), nullable=True),
    sa.Column('market_cap', sa.BigInteger(), nullable=True),
    sa.Column('total_assets', sa.BigInteger(), nullable=True),
    sa.Column('expense_ratio', sa.Float(), nullable=True),
    sa.Column('dividend_yield', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('listing_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('delisting_date', sa.TIMESTAMP(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('website', sa.String(length=500), nullable=True),
    sa.Column('isin', sa.String(length=20), nullable=True),
    sa.Column('cusip', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_updated', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('symbol')
    )
    op.create_index(op.f('ix_assets_id'), 'assets', ['id'], unique=False)
    op.create_table('collector_runs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('collector_name', sa.String(length=100), nullable=False),
    sa.Column('run_id', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('records_processed', sa.Integer(), nullable=True),
    sa.Column('records_added', sa.Integer(), nullable=True),
    sa.Column('records_updated', sa.Integer(), nullable=True),
    sa.Column('records_failed', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.Column('config_used', sa.JSON(), nullable=True),
    sa.Column('version', sa.String(length=20), nullable=True),
    sa.Column('triggered_by', sa.String(length=50), nullable=True),
    sa.Column('depends_on', sa.JSON(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('memory_usage_mb', sa.Float(), nullable=True),
    sa.Column('cpu_time_seconds', sa.Float(), nullable=True),
    sa.Column('api_calls_made', sa.Integer(), nullable=True),
    sa.Column('rate_limit_hits', sa.Integer(), nullable=True),
    sa.Column('data_quality_score', sa.Float(), nullable=True),
    sa.Column('validation_errors', sa.JSON(), nullable=True),
    sa.Column('is_incremental', sa.Boolean(), nullable=True),
    sa.Column('force_full_refresh', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('run_id')
    )
    op.create_index(op.f('ix_collector_runs_collector_name'), 'collector_runs', ['collector_name'], unique=False)
    op.create_table('news_articles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=2000), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('summary', sa.Text(), nullable=True),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=False),
    sa.Column('author', sa.String(length=200), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('fetched_at', sa.DateTime(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('url')
    )
    op.create_index('idx_news_articles_is_processed', 'news_articles', ['is_processed'], unique=False)
    op.create_index('idx_news_articles_published_at', 'news_articles', ['published_at'], unique=False)
    op.create_index('idx_news_articles_source_published', 'news_articles', ['source', 'published_at'], unique=False)
    op.create_index('idx_news_articles_url', 'news_articles', ['url'], unique=False)
    op.create_index(op.f('ix_news_articles_id'), 'news_articles', ['id'], unique=False)
    op.create_table('daily_prices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('open_price', sa.Float(), nullable=True),
    sa.Column('high_price', sa.Float(), nullable=True),
    sa.Column('low_price', sa.Float(), nullable=True),
    sa.Column('close_price', sa.Float(), nullable=True),
    sa.Column('adj_close', sa.Float(), nullable=True),
    sa.Column('volume', sa.BigInteger(), nullable=True),
    sa.Column('dividends', sa.Float(), nullable=True),
    sa.Column('stock_splits', sa.Float(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asset_id', 'date', name='uix_asset_date')
    )
    op.create_index(op.f('ix_daily_prices_id'), 'daily_prices', ['id'], unique=False)
    op.create_table('quarterly_fundamentals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('asset_id', sa.Integer(), nullable=False),
    sa.Column('report_date', sa.Date(), nullable=False),
    sa.Column('price_to_earnings_ratio', sa.Float(), nullable=True),
    sa.Column('price_to_book_ratio', sa.Float(), nullable=True),
    sa.Column('price_to_sales_ratio', sa.Float(), nullable=True),
    sa.Column('peg_ratio', sa.Float(), nullable=True),
    sa.Column('return_on_equity', sa.Float(), nullable=True),
    sa.Column('return_on_assets', sa.Float(), nullable=True),
    sa.Column('profit_margin', sa.Float(), nullable=True),
    sa.Column('operating_margin', sa.Float(), nullable=True),
    sa.Column('gross_margin', sa.Float(), nullable=True),
    sa.Column('total_revenue', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('cost_of_revenue', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('gross_profit', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('operating_income', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('net_income', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('ebitda', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('earnings_per_share', sa.Float(), nullable=True),
    sa.Column('book_value_per_share', sa.Float(), nullable=True),
    sa.Column('revenue_per_share', sa.Float(), nullable=True),
    sa.Column('total_assets', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('total_liabilities', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('total_equity', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('total_debt', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('cash_and_equivalents', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('debt_to_equity_ratio', sa.Float(), nullable=True),
    sa.Column('current_ratio', sa.Float(), nullable=True),
    sa.Column('quick_ratio', sa.Float(), nullable=True),
    sa.Column('operating_cash_flow', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('free_cash_flow', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('capital_expenditure', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('revenue_growth', sa.Float(), nullable=True),
    sa.Column('earnings_growth', sa.Float(), nullable=True),
    sa.Column('shares_outstanding', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('market_cap', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('enterprise_value', sa.Numeric(precision=20, scale=2), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_updated', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['assets.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('asset_id', 'report_date', name='uix_asset_report')
    )
    op.create_index(op.f('ix_quarterly_fundamentals_id'), 'quarterly_fundamentals', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_quarterly_fundamentals_id'), table_name='quarterly_fundamentals')
    op.drop_table('quarterly_fundamentals')
    op.drop_index(op.f('ix_daily_prices_id'), table_name='daily_prices')
    op.drop_table('daily_prices')
    op.drop_index(op.f('ix_news_articles_id'), table_name='news_articles')
    op.drop_index('idx_news_articles_url', table_name='news_articles')
    op.drop_index('idx_news_articles_source_published', table_name='news_articles')
    op.drop_index('idx_news_articles_published_at', table_name='news_articles')
    op.drop_index('idx_news_articles_is_processed', table_name='news_articles')
    op.drop_table('news_articles')
    op.drop_index(op.f('ix_collector_runs_collector_name'), table_name='collector_runs')
    op.drop_table('collector_runs')
    op.drop_index(op.f('ix_assets_id'), table_name='assets')
    op.drop_table('assets')
    # ### end Alembic commands ###
